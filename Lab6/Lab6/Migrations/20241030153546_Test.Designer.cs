// <auto-generated />
using System;
using Lab6.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab6.Migrations
{
    [DbContext(typeof(BookingContext))]
    [Migration("20241030153546_Test")]
    partial class Test
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lab6.Models.Booking", b =>
                {
                    b.Property<int>("booking_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("booking_id"));

                    b.Property<string>("booking_status_code")
                        .IsRequired()
                        .HasColumnType("char(3)");

                    b.Property<string>("confirmation_letter_sent_yn")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<int>("customer_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("date_from")
                        .HasColumnType("date");

                    b.Property<DateTime>("date_to")
                        .HasColumnType("date");

                    b.Property<string>("payment_received_yn")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("reg_number")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.HasKey("booking_id");

                    b.HasIndex("booking_status_code");

                    b.HasIndex("customer_id");

                    b.HasIndex("reg_number");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            booking_id = 1,
                            booking_status_code = "PND",
                            confirmation_letter_sent_yn = "Y",
                            customer_id = 1,
                            date_from = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date_to = new DateTime(2024, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            payment_received_yn = "N",
                            reg_number = "ABC1234567"
                        },
                        new
                        {
                            booking_id = 2,
                            booking_status_code = "CMP",
                            confirmation_letter_sent_yn = "Y",
                            customer_id = 2,
                            date_from = new DateTime(2024, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date_to = new DateTime(2024, 11, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            payment_received_yn = "Y",
                            reg_number = "XYZ9876543"
                        });
                });

            modelBuilder.Entity("Lab6.Models.BookingStatus", b =>
                {
                    b.Property<string>("booking_status_code")
                        .HasColumnType("char(3)");

                    b.Property<string>("booking_status_description")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.HasKey("booking_status_code");

                    b.ToTable("BookingStatuses");

                    b.HasData(
                        new
                        {
                            booking_status_code = "PND",
                            booking_status_description = "Pending"
                        },
                        new
                        {
                            booking_status_code = "CMP",
                            booking_status_description = "Completed"
                        });
                });

            modelBuilder.Entity("Lab6.Models.Customer", b =>
                {
                    b.Property<int>("customer_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("customer_id"));

                    b.Property<string>("address_line_1")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("address_line_2")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("address_line_3")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("county")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("customer_details")
                        .IsRequired()
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("customer_name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("email_address")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("phone_number")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("town")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("customer_id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            customer_id = 1,
                            address_line_1 = "123 Main St",
                            address_line_2 = "6567 City",
                            address_line_3 = "Test City",
                            country = "Sampleland",
                            county = "Samplecounty",
                            customer_details = "Frequent renter",
                            customer_name = "John Doe",
                            email_address = "john@example.com",
                            gender = "M",
                            phone_number = "123456789",
                            town = "Sampletown"
                        },
                        new
                        {
                            customer_id = 2,
                            address_line_1 = "456 Side St",
                            address_line_2 = "15 city",
                            address_line_3 = "Berlin test",
                            country = "Sampleland",
                            county = "Samplecounty",
                            customer_details = "Occasional renter",
                            customer_name = "Jane Smith",
                            email_address = "jane@example.com",
                            gender = "F",
                            phone_number = "987654321",
                            town = "Sampletown"
                        });
                });

            modelBuilder.Entity("Lab6.Models.Manufacturer", b =>
                {
                    b.Property<string>("manufacturer_code")
                        .HasColumnType("char(10)");

                    b.Property<string>("manufacturer_details")
                        .IsRequired()
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("manufacturer_name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("manufacturer_code");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            manufacturer_code = "FORD",
                            manufacturer_details = "American car manufacturer",
                            manufacturer_name = "Ford"
                        },
                        new
                        {
                            manufacturer_code = "TOYO",
                            manufacturer_details = "Japanese car manufacturer",
                            manufacturer_name = "Toyota"
                        });
                });

            modelBuilder.Entity("Lab6.Models.Model", b =>
                {
                    b.Property<string>("model_code")
                        .HasColumnType("char(10)");

                    b.Property<decimal>("daily_hire_rate")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<string>("model_name")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("model_code");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            model_code = "MOD123",
                            daily_hire_rate = 50.00m,
                            model_name = "Model X"
                        },
                        new
                        {
                            model_code = "MOD456",
                            daily_hire_rate = 60.00m,
                            model_name = "Model Y"
                        });
                });

            modelBuilder.Entity("Lab6.Models.Vehicle", b =>
                {
                    b.Property<string>("reg_number")
                        .HasColumnType("char(10)");

                    b.Property<int>("current_mileage")
                        .HasColumnType("int");

                    b.Property<decimal>("daily_hire_rate")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<DateTime>("date_mot_due")
                        .HasColumnType("date");

                    b.Property<string>("manufacturer_code")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.Property<string>("model_code")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.Property<string>("vehicle_category_code")
                        .IsRequired()
                        .HasColumnType("char(5)");

                    b.HasKey("reg_number");

                    b.HasIndex("manufacturer_code");

                    b.HasIndex("model_code");

                    b.HasIndex("vehicle_category_code");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            reg_number = "ABC1234567",
                            current_mileage = 50000,
                            daily_hire_rate = 55.00m,
                            date_mot_due = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            manufacturer_code = "FORD",
                            model_code = "MOD123",
                            vehicle_category_code = "SEDAN"
                        },
                        new
                        {
                            reg_number = "XYZ9876543",
                            current_mileage = 30000,
                            daily_hire_rate = 65.00m,
                            date_mot_due = new DateTime(2024, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            manufacturer_code = "TOYO",
                            model_code = "MOD456",
                            vehicle_category_code = "SUV"
                        });
                });

            modelBuilder.Entity("Lab6.Models.VehicleCategory", b =>
                {
                    b.Property<string>("vehicle_category_code")
                        .HasColumnType("char(5)");

                    b.Property<string>("vehicle_category_description")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.HasKey("vehicle_category_code");

                    b.ToTable("VehicleCategories");

                    b.HasData(
                        new
                        {
                            vehicle_category_code = "SEDAN",
                            vehicle_category_description = "Sedan"
                        },
                        new
                        {
                            vehicle_category_code = "SUV",
                            vehicle_category_description = "SUV"
                        });
                });

            modelBuilder.Entity("Lab6.Models.Booking", b =>
                {
                    b.HasOne("Lab6.Models.BookingStatus", "BookingStatus")
                        .WithMany("Bookings")
                        .HasForeignKey("booking_status_code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab6.Models.Customer", "Customer")
                        .WithMany("Bookings")
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab6.Models.Vehicle", "Vehicle")
                        .WithMany("Bookings")
                        .HasForeignKey("reg_number")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookingStatus");

                    b.Navigation("Customer");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Lab6.Models.Vehicle", b =>
                {
                    b.HasOne("Lab6.Models.Manufacturer", "Manufacturer")
                        .WithMany("Vehicles")
                        .HasForeignKey("manufacturer_code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab6.Models.Model", "Model")
                        .WithMany("Vehicles")
                        .HasForeignKey("model_code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab6.Models.VehicleCategory", "VehicleCategory")
                        .WithMany("Vehicles")
                        .HasForeignKey("vehicle_category_code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manufacturer");

                    b.Navigation("Model");

                    b.Navigation("VehicleCategory");
                });

            modelBuilder.Entity("Lab6.Models.BookingStatus", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Lab6.Models.Customer", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Lab6.Models.Manufacturer", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("Lab6.Models.Model", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("Lab6.Models.Vehicle", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Lab6.Models.VehicleCategory", b =>
                {
                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
