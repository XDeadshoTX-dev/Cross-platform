// <auto-generated />
using System;
using Lab6.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab6.Migrations
{
    [DbContext(typeof(BookingContext))]
    [Migration("20241030194705_DataSeed")]
    partial class DataSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lab6.Models.Booking", b =>
                {
                    b.Property<int>("booking_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("booking_id"));

                    b.Property<string>("booking_status_code")
                        .IsRequired()
                        .HasColumnType("char(3)");

                    b.Property<string>("confirmation_letter_sent_yn")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<int>("customer_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("date_from")
                        .HasColumnType("date");

                    b.Property<DateTime>("date_to")
                        .HasColumnType("date");

                    b.Property<string>("payment_received_yn")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("reg_number")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.HasKey("booking_id");

                    b.HasIndex("booking_status_code");

                    b.HasIndex("customer_id");

                    b.HasIndex("reg_number");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            booking_id = 1,
                            booking_status_code = "PND",
                            confirmation_letter_sent_yn = "Y",
                            customer_id = 1,
                            date_from = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date_to = new DateTime(2024, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            payment_received_yn = "N",
                            reg_number = "ABC1234567"
                        },
                        new
                        {
                            booking_id = 2,
                            booking_status_code = "CMP",
                            confirmation_letter_sent_yn = "Y",
                            customer_id = 2,
                            date_from = new DateTime(2024, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date_to = new DateTime(2024, 11, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            payment_received_yn = "Y",
                            reg_number = "XYZ9876543"
                        },
                        new
                        {
                            booking_id = 3,
                            booking_status_code = "CNL",
                            confirmation_letter_sent_yn = "Y",
                            customer_id = 3,
                            date_from = new DateTime(2024, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date_to = new DateTime(2024, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            payment_received_yn = "Y",
                            reg_number = "JKL1237890"
                        },
                        new
                        {
                            booking_id = 4,
                            booking_status_code = "RNT",
                            confirmation_letter_sent_yn = "N",
                            customer_id = 4,
                            date_from = new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date_to = new DateTime(2024, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            payment_received_yn = "N",
                            reg_number = "MNO4561234"
                        },
                        new
                        {
                            booking_id = 5,
                            booking_status_code = "OVD",
                            confirmation_letter_sent_yn = "Y",
                            customer_id = 5,
                            date_from = new DateTime(2024, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date_to = new DateTime(2024, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            payment_received_yn = "N",
                            reg_number = "DEF4567890"
                        },
                        new
                        {
                            booking_id = 6,
                            booking_status_code = "PPD",
                            confirmation_letter_sent_yn = "Y",
                            customer_id = 6,
                            date_from = new DateTime(2024, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date_to = new DateTime(2024, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            payment_received_yn = "Y",
                            reg_number = "GHI9876543"
                        },
                        new
                        {
                            booking_id = 7,
                            booking_status_code = "CNF",
                            confirmation_letter_sent_yn = "Y",
                            customer_id = 7,
                            date_from = new DateTime(2024, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date_to = new DateTime(2024, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            payment_received_yn = "Y",
                            reg_number = "JKL1234567"
                        },
                        new
                        {
                            booking_id = 8,
                            booking_status_code = "CHI",
                            confirmation_letter_sent_yn = "N",
                            customer_id = 8,
                            date_from = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date_to = new DateTime(2024, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            payment_received_yn = "N",
                            reg_number = "OPQ9876543"
                        },
                        new
                        {
                            booking_id = 9,
                            booking_status_code = "CHK",
                            confirmation_letter_sent_yn = "Y",
                            customer_id = 9,
                            date_from = new DateTime(2024, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date_to = new DateTime(2024, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            payment_received_yn = "N",
                            reg_number = "RST1234567"
                        },
                        new
                        {
                            booking_id = 10,
                            booking_status_code = "DIS",
                            confirmation_letter_sent_yn = "Y",
                            customer_id = 10,
                            date_from = new DateTime(2024, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date_to = new DateTime(2024, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            payment_received_yn = "Y",
                            reg_number = "UVW9876543"
                        });
                });

            modelBuilder.Entity("Lab6.Models.BookingStatus", b =>
                {
                    b.Property<string>("booking_status_code")
                        .HasColumnType("char(3)");

                    b.Property<string>("booking_status_description")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.HasKey("booking_status_code");

                    b.ToTable("BookingStatuses");

                    b.HasData(
                        new
                        {
                            booking_status_code = "PND",
                            booking_status_description = "Pending"
                        },
                        new
                        {
                            booking_status_code = "CMP",
                            booking_status_description = "Completed"
                        },
                        new
                        {
                            booking_status_code = "CNL",
                            booking_status_description = "Cancelled"
                        },
                        new
                        {
                            booking_status_code = "RNT",
                            booking_status_description = "Rented"
                        },
                        new
                        {
                            booking_status_code = "OVD",
                            booking_status_description = "Overdue"
                        },
                        new
                        {
                            booking_status_code = "PPD",
                            booking_status_description = "Prepaid"
                        },
                        new
                        {
                            booking_status_code = "CNF",
                            booking_status_description = "Confirmed"
                        },
                        new
                        {
                            booking_status_code = "CHI",
                            booking_status_description = "CheckedIn"
                        },
                        new
                        {
                            booking_status_code = "CHK",
                            booking_status_description = "CheckedOut"
                        },
                        new
                        {
                            booking_status_code = "DIS",
                            booking_status_description = "Disputed"
                        });
                });

            modelBuilder.Entity("Lab6.Models.Customer", b =>
                {
                    b.Property<int>("customer_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("customer_id"));

                    b.Property<string>("address_line_1")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("address_line_2")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("address_line_3")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("county")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("customer_details")
                        .IsRequired()
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("customer_name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("email_address")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("phone_number")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("town")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("customer_id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            customer_id = 1,
                            address_line_1 = "123 Main St",
                            address_line_2 = "Apt 101",
                            address_line_3 = "",
                            country = "Sampleland",
                            county = "Samplecounty",
                            customer_details = "Frequent renter",
                            customer_name = "John Doe",
                            email_address = "john@example.com",
                            gender = "M",
                            phone_number = "123456789",
                            town = "Sampletown"
                        },
                        new
                        {
                            customer_id = 2,
                            address_line_1 = "456 Side St",
                            address_line_2 = "Suite 202",
                            address_line_3 = "",
                            country = "Sampleland",
                            county = "Samplecounty",
                            customer_details = "Occasional renter",
                            customer_name = "Jane Smith",
                            email_address = "jane@example.com",
                            gender = "F",
                            phone_number = "987654321",
                            town = "Sampletown"
                        },
                        new
                        {
                            customer_id = 3,
                            address_line_1 = "789 Park Ave",
                            address_line_2 = "Floor 3",
                            address_line_3 = "",
                            country = "Sampleland",
                            county = "Samplecounty",
                            customer_details = "Business renter",
                            customer_name = "Alice Brown",
                            email_address = "alice@example.com",
                            gender = "F",
                            phone_number = "555555555",
                            town = "Big City"
                        },
                        new
                        {
                            customer_id = 4,
                            address_line_1 = "321 Hill Rd",
                            address_line_2 = "",
                            address_line_3 = "",
                            country = "Sampleland",
                            county = "Samplecounty",
                            customer_details = "Tourist",
                            customer_name = "Bob Green",
                            email_address = "bob@example.com",
                            gender = "M",
                            phone_number = "111111111",
                            town = "Hilltown"
                        },
                        new
                        {
                            customer_id = 5,
                            address_line_1 = "654 Elm St",
                            address_line_2 = "Building A",
                            address_line_3 = "",
                            country = "Sampleland",
                            county = "Samplecounty",
                            customer_details = "Long-term renter",
                            customer_name = "Charlie Johnson",
                            email_address = "charlie@example.com",
                            gender = "M",
                            phone_number = "222222222",
                            town = "Elmwood"
                        },
                        new
                        {
                            customer_id = 6,
                            address_line_1 = "321 Oak St",
                            address_line_2 = "Apartment 5",
                            address_line_3 = "",
                            country = "Sampleland",
                            county = "Samplecounty",
                            customer_details = "VIP customer",
                            customer_name = "Diana Prince",
                            email_address = "diana@example.com",
                            gender = "F",
                            phone_number = "333333333",
                            town = "Gotham"
                        },
                        new
                        {
                            customer_id = 7,
                            address_line_1 = "789 Pine St",
                            address_line_2 = "Unit 10",
                            address_line_3 = "",
                            country = "Sampleland",
                            county = "Samplecounty",
                            customer_details = "Adventurer",
                            customer_name = "Ethan Hunt",
                            email_address = "ethan@example.com",
                            gender = "M",
                            phone_number = "444444444",
                            town = "Pineville"
                        },
                        new
                        {
                            customer_id = 8,
                            address_line_1 = "222 Maple St",
                            address_line_2 = "",
                            address_line_3 = "",
                            country = "Sampleland",
                            county = "Samplecounty",
                            customer_details = "Family renter",
                            customer_name = "Fiona Gallagher",
                            email_address = "fiona@example.com",
                            gender = "F",
                            phone_number = "555555555",
                            town = "Mapleton"
                        },
                        new
                        {
                            customer_id = 9,
                            address_line_1 = "333 Birch St",
                            address_line_2 = "Floor 2",
                            address_line_3 = "",
                            country = "Sampleland",
                            county = "Samplecounty",
                            customer_details = "Weekend renter",
                            customer_name = "George Clark",
                            email_address = "george@example.com",
                            gender = "M",
                            phone_number = "666666666",
                            town = "Birchtown"
                        },
                        new
                        {
                            customer_id = 10,
                            address_line_1 = "555 Cedar St",
                            address_line_2 = "",
                            address_line_3 = "",
                            country = "Sampleland",
                            county = "Samplecounty",
                            customer_details = "Seasonal renter",
                            customer_name = "Hannah Adams",
                            email_address = "hannah@example.com",
                            gender = "F",
                            phone_number = "777777777",
                            town = "Cedarville"
                        });
                });

            modelBuilder.Entity("Lab6.Models.Manufacturer", b =>
                {
                    b.Property<string>("manufacturer_code")
                        .HasColumnType("char(10)");

                    b.Property<string>("manufacturer_details")
                        .IsRequired()
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("manufacturer_name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("manufacturer_code");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            manufacturer_code = "FORD",
                            manufacturer_details = "American car manufacturer",
                            manufacturer_name = "Ford"
                        },
                        new
                        {
                            manufacturer_code = "TOYO",
                            manufacturer_details = "Japanese car manufacturer",
                            manufacturer_name = "Toyota"
                        },
                        new
                        {
                            manufacturer_code = "HONDA",
                            manufacturer_details = "Japanese car manufacturer",
                            manufacturer_name = "Honda"
                        },
                        new
                        {
                            manufacturer_code = "NISSAN",
                            manufacturer_details = "Japanese car manufacturer",
                            manufacturer_name = "Nissan"
                        },
                        new
                        {
                            manufacturer_code = "BMW",
                            manufacturer_details = "German car manufacturer",
                            manufacturer_name = "BMW"
                        },
                        new
                        {
                            manufacturer_code = "MERCEDES",
                            manufacturer_details = "German car manufacturer",
                            manufacturer_name = "Mercedes-Benz"
                        },
                        new
                        {
                            manufacturer_code = "AUDI",
                            manufacturer_details = "German car manufacturer",
                            manufacturer_name = "Audi"
                        },
                        new
                        {
                            manufacturer_code = "VOLVO",
                            manufacturer_details = "Swedish car manufacturer",
                            manufacturer_name = "Volvo"
                        },
                        new
                        {
                            manufacturer_code = "HYUNDAI",
                            manufacturer_details = "South Korean car manufacturer",
                            manufacturer_name = "Hyundai"
                        },
                        new
                        {
                            manufacturer_code = "KIA",
                            manufacturer_details = "South Korean car manufacturer",
                            manufacturer_name = "Kia"
                        });
                });

            modelBuilder.Entity("Lab6.Models.Model", b =>
                {
                    b.Property<string>("model_code")
                        .HasColumnType("char(10)");

                    b.Property<decimal>("daily_hire_rate")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<string>("model_name")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("model_code");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            model_code = "MOD123",
                            daily_hire_rate = 50.00m,
                            model_name = "Model X"
                        },
                        new
                        {
                            model_code = "MOD456",
                            daily_hire_rate = 60.00m,
                            model_name = "Model Y"
                        },
                        new
                        {
                            model_code = "MOD789",
                            daily_hire_rate = 70.00m,
                            model_name = "Model Z"
                        },
                        new
                        {
                            model_code = "MOD012",
                            daily_hire_rate = 45.00m,
                            model_name = "Model A"
                        },
                        new
                        {
                            model_code = "MOD345",
                            daily_hire_rate = 55.00m,
                            model_name = "Model B"
                        },
                        new
                        {
                            model_code = "MOD678",
                            daily_hire_rate = 65.00m,
                            model_name = "Model C"
                        },
                        new
                        {
                            model_code = "MOD901",
                            daily_hire_rate = 75.00m,
                            model_name = "Model D"
                        },
                        new
                        {
                            model_code = "MOD234",
                            daily_hire_rate = 40.00m,
                            model_name = "Model E"
                        },
                        new
                        {
                            model_code = "MOD567",
                            daily_hire_rate = 50.00m,
                            model_name = "Model F"
                        },
                        new
                        {
                            model_code = "MOD890",
                            daily_hire_rate = 60.00m,
                            model_name = "Model G"
                        });
                });

            modelBuilder.Entity("Lab6.Models.Vehicle", b =>
                {
                    b.Property<string>("reg_number")
                        .HasColumnType("char(10)");

                    b.Property<int>("current_mileage")
                        .HasColumnType("int");

                    b.Property<decimal>("daily_hire_rate")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<DateTime>("date_mot_due")
                        .HasColumnType("date");

                    b.Property<string>("manufacturer_code")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.Property<string>("model_code")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.Property<string>("vehicle_category_code")
                        .IsRequired()
                        .HasColumnType("char(5)");

                    b.HasKey("reg_number");

                    b.HasIndex("manufacturer_code");

                    b.HasIndex("model_code");

                    b.HasIndex("vehicle_category_code");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            reg_number = "ABC1234567",
                            current_mileage = 50000,
                            daily_hire_rate = 55.00m,
                            date_mot_due = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            manufacturer_code = "FORD",
                            model_code = "MOD123",
                            vehicle_category_code = "SEDAN"
                        },
                        new
                        {
                            reg_number = "XYZ9876543",
                            current_mileage = 30000,
                            daily_hire_rate = 65.00m,
                            date_mot_due = new DateTime(2024, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            manufacturer_code = "TOYO",
                            model_code = "MOD456",
                            vehicle_category_code = "SUV"
                        },
                        new
                        {
                            reg_number = "JKL1237890",
                            current_mileage = 20000,
                            daily_hire_rate = 70.00m,
                            date_mot_due = new DateTime(2025, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            manufacturer_code = "HONDA",
                            model_code = "MOD678",
                            vehicle_category_code = "COUPE"
                        },
                        new
                        {
                            reg_number = "MNO4561234",
                            current_mileage = 10000,
                            daily_hire_rate = 120.00m,
                            date_mot_due = new DateTime(2024, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            manufacturer_code = "BMW",
                            model_code = "MOD901",
                            vehicle_category_code = "SPRTS"
                        },
                        new
                        {
                            reg_number = "DEF4567890",
                            current_mileage = 15000,
                            daily_hire_rate = 80.00m,
                            date_mot_due = new DateTime(2025, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            manufacturer_code = "MERCEDES",
                            model_code = "MOD234",
                            vehicle_category_code = "CTIBL"
                        },
                        new
                        {
                            reg_number = "GHI9876543",
                            current_mileage = 25000,
                            daily_hire_rate = 85.00m,
                            date_mot_due = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            manufacturer_code = "AUDI",
                            model_code = "MOD567",
                            vehicle_category_code = "WAGON"
                        },
                        new
                        {
                            reg_number = "JKL1234567",
                            current_mileage = 18000,
                            daily_hire_rate = 50.00m,
                            date_mot_due = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            manufacturer_code = "HYUNDAI",
                            model_code = "MOD890",
                            vehicle_category_code = "HBACK"
                        },
                        new
                        {
                            reg_number = "OPQ9876543",
                            current_mileage = 22000,
                            daily_hire_rate = 60.00m,
                            date_mot_due = new DateTime(2024, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            manufacturer_code = "KIA",
                            model_code = "MOD012",
                            vehicle_category_code = "VAN"
                        },
                        new
                        {
                            reg_number = "RST1234567",
                            current_mileage = 8000,
                            daily_hire_rate = 90.00m,
                            date_mot_due = new DateTime(2025, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            manufacturer_code = "NISSAN",
                            model_code = "MOD345",
                            vehicle_category_code = "TRUCK"
                        },
                        new
                        {
                            reg_number = "UVW9876543",
                            current_mileage = 12000,
                            daily_hire_rate = 75.00m,
                            date_mot_due = new DateTime(2025, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            manufacturer_code = "VOLVO",
                            model_code = "MOD789",
                            vehicle_category_code = "MVAN"
                        });
                });

            modelBuilder.Entity("Lab6.Models.VehicleCategory", b =>
                {
                    b.Property<string>("vehicle_category_code")
                        .HasColumnType("char(5)");

                    b.Property<string>("vehicle_category_description")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.HasKey("vehicle_category_code");

                    b.ToTable("VehicleCategories");

                    b.HasData(
                        new
                        {
                            vehicle_category_code = "SEDAN",
                            vehicle_category_description = "Sedan"
                        },
                        new
                        {
                            vehicle_category_code = "SUV",
                            vehicle_category_description = "SUV"
                        },
                        new
                        {
                            vehicle_category_code = "TRUCK",
                            vehicle_category_description = "Truck"
                        },
                        new
                        {
                            vehicle_category_code = "VAN",
                            vehicle_category_description = "Van"
                        },
                        new
                        {
                            vehicle_category_code = "COUPE",
                            vehicle_category_description = "Coupe"
                        },
                        new
                        {
                            vehicle_category_code = "CTIBL",
                            vehicle_category_description = "Convertibl"
                        },
                        new
                        {
                            vehicle_category_code = "HBACK",
                            vehicle_category_description = "Hatchback"
                        },
                        new
                        {
                            vehicle_category_code = "WAGON",
                            vehicle_category_description = "Wagon"
                        },
                        new
                        {
                            vehicle_category_code = "MVAN",
                            vehicle_category_description = "Minivan"
                        },
                        new
                        {
                            vehicle_category_code = "SPRTS",
                            vehicle_category_description = "Sports Car"
                        });
                });

            modelBuilder.Entity("Lab6.Models.Booking", b =>
                {
                    b.HasOne("Lab6.Models.BookingStatus", "BookingStatus")
                        .WithMany("Bookings")
                        .HasForeignKey("booking_status_code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab6.Models.Customer", "Customer")
                        .WithMany("Bookings")
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab6.Models.Vehicle", "Vehicle")
                        .WithMany("Bookings")
                        .HasForeignKey("reg_number")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookingStatus");

                    b.Navigation("Customer");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Lab6.Models.Vehicle", b =>
                {
                    b.HasOne("Lab6.Models.Manufacturer", "Manufacturer")
                        .WithMany("Vehicles")
                        .HasForeignKey("manufacturer_code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab6.Models.Model", "Model")
                        .WithMany("Vehicles")
                        .HasForeignKey("model_code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab6.Models.VehicleCategory", "VehicleCategory")
                        .WithMany("Vehicles")
                        .HasForeignKey("vehicle_category_code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manufacturer");

                    b.Navigation("Model");

                    b.Navigation("VehicleCategory");
                });

            modelBuilder.Entity("Lab6.Models.BookingStatus", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Lab6.Models.Customer", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Lab6.Models.Manufacturer", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("Lab6.Models.Model", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("Lab6.Models.Vehicle", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Lab6.Models.VehicleCategory", b =>
                {
                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
